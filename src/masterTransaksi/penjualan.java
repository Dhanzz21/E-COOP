
package masterTransaksi;

/**
 *
 * @author Galuh Prandika
 */

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import masterData.*;
import java.sql.*;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;



public class penjualan extends javax.swing.JPanel {
   
   public Statement stat;
    public ResultSet res;
    Connection cn = config.koneksi.BukaKoneksi();
    NumberFormat nf = NumberFormat.getNumberInstance(new Locale("in", "ID"));
    
    public penjualan() {
        initComponents();
        generateNoTransaksi();
        
        //table design
         JTableHeader header = tbldatapenjualan.getTableHeader();
    header.setDefaultRenderer(new DefaultTableCellRenderer() {
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {

        JLabel label = (JLabel) super.getTableCellRendererComponent(
                table, value, isSelected, hasFocus, row, column);
        
        label.setBackground(new Color(32, 136, 203)); // biru
        label.setForeground(Color.WHITE); // teks putih
        label.setFont(new Font("Segoe UI", Font.BOLD, 15));
        label.setHorizontalAlignment(JLabel.CENTER);
        label.setOpaque(true); // WAJIB supaya background tampil

        return label;
    }
});
        
        cb_kodeBarang.addActionListener(new java.awt.event.ActionListener() {
        
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            tx_qty.addKeyListener(new java.awt.event.KeyAdapter() {
              public void keyReleased(java.awt.event.KeyEvent evt) {
        hitungTotalHarga();
    }
});

        kodeBarang();
    }
});

    }
    private void generateNoTransaksi() {
    String noTrans = "TRX" + System.currentTimeMillis();
    tx_noTrans.setText(noTrans);
}

    
    private void kodeBarang () {
     if (cb_kodeBarang.getSelectedItem() == null) {
        JOptionPane.showMessageDialog(this, "Silakan pilih kode barang terlebih dahulu!");
        return;
    }

    String kode = cb_kodeBarang.getSelectedItem().toString();

    try {
        String sql = "SELECT nama_barang, harga_barang FROM data_barang WHERE Id = ?";
        PreparedStatement pst = cn.prepareStatement(sql);
        pst.setString(1, kode);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            tx_namaBarang.setText(rs.getString("nama_barang"));
            tx_hargaBarang.setText(rs.getString("harga_barang"));

            // Set fokus dan tidak bisa diedit
            tx_qty.grabFocus();
            tx_namaBarang.setEditable(false);
            tx_hargaBarang.setEditable(false);
            tx_totalHarga.setEditable(false);
        } else {
            // Jika data tidak ditemukan
            tx_namaBarang.setText("");
            tx_hargaBarang.setText("");
            JOptionPane.showMessageDialog(this, "Data barang tidak ditemukan.");
        }

        // Tutup statement dan result
        rs.close();
        pst.close();

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal mengambil data barang: " + e.getMessage());
    }
    
    
}
    private void hitungTotalHarga() {
    try {
        int harga = Integer.parseInt(tx_hargaBarang.getText());
        int qty = Integer.parseInt(tx_qty.getText());
        int total = harga * qty;
        tx_totalHarga.setText(String.valueOf(nf.format(total)));
    } catch (NumberFormatException e) {
        tx_totalHarga.setText("0");
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main_panel = new javax.swing.JPanel();
        data_pinjaman1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbldatapenjualan = new javax.swing.JTable();
        HargaAkhir = new javax.swing.JLabel();
        btn_bayar = new javax.swing.JButton();
        btn_hapusBarang = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tx_noTrans = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cb_kodeBarang = new javax.swing.JComboBox<>();
        tx_namaBarang = new javax.swing.JTextField();
        tx_hargaBarang = new javax.swing.JTextField();
        tx_qty = new javax.swing.JTextField();
        tx_totalHarga = new javax.swing.JTextField();
        tx_totalAkhir = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lbl = new javax.swing.JLabel();
        lblJmlqty = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        main_panel.setLayout(new java.awt.CardLayout());

        data_pinjaman1.setBackground(new java.awt.Color(255, 255, 255));

        tbldatapenjualan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tbldatapenjualan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Kode Barang", "Nama Barang", "Harga Barang", "QTY", "Total Harga"
            }
        ));
        tbldatapenjualan.setFocusable(false);
        tbldatapenjualan.setGridColor(new java.awt.Color(153, 153, 153));
        tbldatapenjualan.setRowHeight(25);
        tbldatapenjualan.setSelectionBackground(new java.awt.Color(232, 57, 95));
        tbldatapenjualan.setShowHorizontalLines(false);
        jScrollPane6.setViewportView(tbldatapenjualan);

        HargaAkhir.setBackground(new java.awt.Color(232, 57, 95));
        HargaAkhir.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        HargaAkhir.setForeground(new java.awt.Color(232, 57, 95));
        HargaAkhir.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        HargaAkhir.setText("Rp.");

        btn_bayar.setBackground(new java.awt.Color(0, 153, 255));
        btn_bayar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_bayar.setText("Bayar");
        btn_bayar.setPreferredSize(new java.awt.Dimension(81, 25));
        btn_bayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bayarActionPerformed(evt);
            }
        });

        btn_hapusBarang.setBackground(new java.awt.Color(255, 255, 255));
        btn_hapusBarang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_hapusBarang.setText("Hapus Barang");
        btn_hapusBarang.setPreferredSize(new java.awt.Dimension(81, 25));
        btn_hapusBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusBarangActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel1.setText("No. Transaksi");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel2.setText("Kode Barang");

        cb_kodeBarang.setBackground(new java.awt.Color(0, 153, 255));
        cb_kodeBarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ATR001", "ATR002", "ATR003", "ATR004", "ATK001", "ATK002", "ATK003", "ATK004", "ATK005", "ATK006", "ATK007", "ATK008", "ATK009", "ATK010", "ATK011", "ATK012", "ATK013", "ATK014", "ATK015", "ATK016", "ATK017", " " }));

        tx_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_qtyActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel3.setText("Total Akhir");

        lbl.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lbl.setText("Jumlah barang : ");

        lblJmlqty.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblJmlqty.setText("0");

        javax.swing.GroupLayout data_pinjaman1Layout = new javax.swing.GroupLayout(data_pinjaman1);
        data_pinjaman1.setLayout(data_pinjaman1Layout);
        data_pinjaman1Layout.setHorizontalGroup(
            data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(data_pinjaman1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, data_pinjaman1Layout.createSequentialGroup()
                        .addGroup(data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tx_noTrans)
                            .addComponent(cb_kodeBarang, 0, 211, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tx_namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tx_hargaBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tx_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tx_totalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, data_pinjaman1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(HargaAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, data_pinjaman1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblJmlqty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(44, 44, 44)
                .addGroup(data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tx_totalAkhir)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, data_pinjaman1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btn_bayar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_hapusBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)))
                .addGap(24, 24, 24))
        );
        data_pinjaman1Layout.setVerticalGroup(
            data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(data_pinjaman1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(HargaAkhir)
                .addGap(35, 35, 35)
                .addGroup(data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(data_pinjaman1Layout.createSequentialGroup()
                        .addGroup(data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cb_kodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tx_namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tx_hargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tx_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tx_totalHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53))
                    .addGroup(data_pinjaman1Layout.createSequentialGroup()
                        .addGroup(data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tx_noTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(93, 93, 93)))
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tx_totalAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lbl)
                    .addComponent(lblJmlqty))
                .addGap(18, 18, 18)
                .addGroup(data_pinjaman1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_bayar, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(btn_hapusBarang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58))
        );

        main_panel.add(data_pinjaman1, "card2");

        add(main_panel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void tx_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_qtyActionPerformed
        // TODO add your handling code here:
        if (tx_qty.getText().equals("")) {
            return;
        } else {
        DefaultTableModel mod = (DefaultTableModel) tbldatapenjualan.getModel();
        Object obj [] = new Object[6];
        obj [1] = cb_kodeBarang.getSelectedItem();
        obj [2] = tx_namaBarang.getText();
        try {
            int harga = Integer.parseInt(tx_totalHarga.getText().replace(".", "").replace(",", ""));
                  obj[3] = nf.format(harga);
            } catch (NumberFormatException e) {
                  obj[3] = "0";
            }
        obj [4] = tx_qty.getText();
        try {
            int totalHarga = Integer.parseInt(tx_totalHarga.getText().replace(".", "").replace(",", ""));
                  obj[5] = nf.format(totalHarga);
            } catch (NumberFormatException e) {
                  obj[5] = "0";
            }
        
        mod.addRow(obj);
        
        int baris = mod.getRowCount();
            for (int i = 0; i < baris; i++) {
                String no = String.valueOf(i + 1);
                mod.setValueAt(no + ".", i, 0);
            }
            tbldatapenjualan.setRowHeight(30);
            
            lblJmlqty.setText(String.valueOf(baris));
            
            jmlHarga();
            bersih();
        }
    }//GEN-LAST:event_tx_qtyActionPerformed

    private void btn_hapusBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusBarangActionPerformed
        // TODO add your handling code here:
        int row = tbldatapenjualan.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(this, "Pilih dulu baris yang ingin dihapus!");
        return;
    }

    DefaultTableModel mod = (DefaultTableModel) tbldatapenjualan.getModel();
    mod.removeRow(row);

    // Update nomor urutan & jumlah qty setelah dihapus
    for (int i = 0; i < mod.getRowCount(); i++) {
        mod.setValueAt((i + 1) + ".", i, 0);
    }

    lblJmlqty.setText(String.valueOf(mod.getRowCount()));

    // Update total harga setelah penghapusan
    jmlHarga();
    }//GEN-LAST:event_btn_hapusBarangActionPerformed

    private void btn_bayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bayarActionPerformed
        // TODO add your handling code here:
         if (tbldatapenjualan.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "Belum ada barang yang dibeli.");
        return;
    }

    // Ambil total belanja
    String totalStr = tx_totalAkhir.getText().replace(".", "").replace(",", "");
    int totalBelanja = Integer.parseInt(totalStr);

    // Input jumlah uang dari pelanggan
    String bayarStr = JOptionPane.showInputDialog(this, "Total belanja: Rp " + nf.format(totalBelanja) + "\nMasukkan jumlah uang bayar:");

    if (bayarStr == null || bayarStr.trim().equals("")) {
        JOptionPane.showMessageDialog(this, "Pembayaran dibatalkan.");
        return;
    }

    int jumlahBayar;
    try {
        jumlahBayar = Integer.parseInt(bayarStr.replace(".", "").replace(",", ""));
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Input tidak valid! Harus angka.");
        return;
    }

    if (jumlahBayar < totalBelanja) {
        JOptionPane.showMessageDialog(this, "Uang yang dibayarkan kurang dari total belanja.");
        return;
    }

    int kembalian = jumlahBayar - totalBelanja;

    // Update stok barang di database
    try {
        for (int i = 0; i < tbldatapenjualan.getRowCount(); i++) {
            String idBarang = tbldatapenjualan.getValueAt(i, 1).toString(); // kolom 1 = id barang
            int qty = Integer.parseInt(tbldatapenjualan.getValueAt(i, 4).toString()); // kolom 4 = qty

            // Ambil stok saat ini dari database
            String sqlSelect = "SELECT Stock FROM data_barang WHERE Id = '" + idBarang + "'";
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sqlSelect);

            if (rs.next()) {
                int stokSekarang = rs.getInt("Stock");
                int stokBaru = stokSekarang - qty;

                // Update stok ke database
                String sqlUpdate = "UPDATE data_barang SET Stock = " + stokBaru + " WHERE Id = '" + idBarang + "'";
                st.executeUpdate(sqlUpdate);
            }

            rs.close();
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal update  Stock barang: " + e.getMessage());
        return;
    }

    // Tampilkan info pembayaran
    JOptionPane.showMessageDialog(this,
        "Total Belanja : Rp " + nf.format(totalBelanja) +
        "\nDibayar       : Rp " + nf.format(jumlahBayar) +
        "\nKembalian     : Rp " + nf.format(kembalian),
        "Pembayaran Sukses", JOptionPane.INFORMATION_MESSAGE);

    // Reset tabel & input
    DefaultTableModel mod = (DefaultTableModel) tbldatapenjualan.getModel();
    mod.setRowCount(0);

    lblJmlqty.setText("0");
    tx_totalAkhir.setText("0");
    cb_kodeBarang.grabFocus();
    }//GEN-LAST:event_btn_bayarActionPerformed

    
        

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HargaAkhir;
    private javax.swing.JButton btn_bayar;
    private javax.swing.JButton btn_hapusBarang;
    private javax.swing.JComboBox<String> cb_kodeBarang;
    private javax.swing.JPanel data_pinjaman1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lbl;
    private javax.swing.JLabel lblJmlqty;
    private javax.swing.JPanel main_panel;
    private javax.swing.JTable tbldatapenjualan;
    private javax.swing.JTextField tx_hargaBarang;
    private javax.swing.JTextField tx_namaBarang;
    private javax.swing.JTextField tx_noTrans;
    private javax.swing.JTextField tx_qty;
    private javax.swing.JTextField tx_totalAkhir;
    private javax.swing.JTextField tx_totalHarga;
    // End of variables declaration//GEN-END:variables

   private void jmlHarga() {
    int sum = 0;
    for (int a = 0; a < tbldatapenjualan.getRowCount(); a++) {
        try {
            String value = tbldatapenjualan.getValueAt(a, 5).toString().replace(".", "").replace(",", "");
            sum += Integer.parseInt(value);
        } catch (NumberFormatException e) {
            // Lewati jika error parsing
        }
    }
    tx_totalAkhir.setText(nf.format(sum)); // pastikan nf (NumberFormat) sudah diinisialisasi
    HargaAkhir.setText("Rp. "+nf.format(sum)); 
}


   private void bersih() {
    cb_kodeBarang.grabFocus();
    tx_namaBarang.setText("");
    tx_hargaBarang.setText("");
    tx_qty.setText("");
    tx_totalHarga.setText("");
}

}
